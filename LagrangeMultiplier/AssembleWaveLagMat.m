function K = AssembleWaveLagMat(DofIndex_sparse,LagMeshIndex,LagBaseIndex,...
    IntegralBlock1,IntegralBlock2,...
    BaseFunIndex_x,BaseFunIndex_y,BaseFunIndex_z,...
    WaveletRegionBaseIndex2D,WaveIndex4Lag,...
    DimFixed,NodeFixed,baseTypeWave,baseTypeLag,order,intervalWave)
%ASSEMBLEWAVELAGMAT 组装小波基离散区域的连接矩阵
%   DofIndex_sparse:稀疏基索引，1~3列分别为对应x,y,z方向一维小波基的编号，与BaseFunIndex对应
%   LagMeshIndex：Lagrange乘子网格索引，每一行表示一个网格
%       1~2：网格第一个维度的区间端点，3~4：网格第二个维度的区间端点
%       剩下元素为对的基函数编号，即对应于LagBaseIndex的某些行,若为0则不表示任何基函数
% LagBaseIndex：Lagrange乘子基函数信息表，每一行表示一个基函数，各列存储的信息如下所示：
%     1~4：所属单元，1~2第一个维度，3~4第二个维度
%     5~6：两个维度对应的一维基函数编号
%     7~8：标记两个维度是否为边界单元，若为0则为内部单元，若为1则为左侧单元，若为2则为右侧单元
%   IntegralBlock1,IntegralBlock2：第一和第二个维度的积分区间段
%   BaseFunIndex_x,BaseFunIndex_y,BaseFunIndex_z:分别为x,y,z方向的一维参考基的基函数信息，
%       1：SpaceType，0表示尺度基，1表示小波基
%       2：level
%       3：基函数编号
%       4：支集左端点
%       5：支集右端点
%       6：基函数坐标索引
%       7：基函数编号
%   WaveletRegionBaseIndex2D：区域内对应的稀疏基编号，与DofIndex_sparse的行对应(或者说WaveIndex4Lag的行)
%   WaveIndex4Lag：用于组装Lagrange-Wavelet连接矩阵的索引矩阵(每一行与DofIndex_sparse的行对应)
%       1-2：x方向的支集端点；3-4：y方向的支集端点；5-6：z方向的支集端点
%       7-9：对应三个方向基函数的编号，分别与BaseFunIndex_x,BaseFunIndex_y,BaseFunIndex_z的行对应
%   DimFixed：固定的维度，1：x方向，2：y方向，3：z方向
%   NodeFixed：固定维度的固定点，为标量
%   baseTypeWave：小波基类型
%   baseTypeLag：Lagrange乘子基函数类型
%   order：Gauss积分阶数
%   intervalWave：小波基的定义区间，为3x2矩阵，每一行表示一个维度的区间

NWaveDOF=size(DofIndex_sparse,1); % 稀疏小波基总数，即为K的行数
NNZIndexWaveLag = FindNNPosWaveLag(WaveletRegionBaseIndex2D,...
    LagMeshIndex,WaveIndex4Lag,DimFixed); % 找到矩阵K中非0元素的位置
[IntegralBlockNNZ1,IntegralBlockNNZ2] = GenIntBlock2WaveLag(NNZIndexWaveLag,DofIndex_sparse,...
    LagMeshIndex,IntegralBlock1,IntegralBlock2,DimFixed); % 生成每个元素的积分区间段
Triplets=[];
int_err=[];
for i=1:size(NNZIndexWaveLag,1)
    BaseListLag=LagMeshIndex(NNZIndexWaveLag(i,2),5:end); % Lagrange乘子基函数
    BaseListLag(BaseListLag==0)=[];
    iWave=NNZIndexWaveLag(i,1); % 稀疏小波基的编号，与DofIndex_sparse的行对应
    iWave_x=DofIndex_sparse(iWave,1); % x方向的小波基编号，与BaseFunIndex_x的行对应
    iWave_y=DofIndex_sparse(iWave,2); % y方向的小波基编号，与BaseFunIndex_y的行对应
    iWave_z=DofIndex_sparse(iWave,3); % z方向的小波基编号，与BaseFunIndex_z的行对应
    Lagele=[LagMeshIndex(NNZIndexWaveLag(i,2),1:2);...
        LagMeshIndex(NNZIndexWaveLag(i,2),3:4)]; % Lagrange乘子基函数所属单元
    IntBlock1=IntegralBlockNNZ1(i,:)';
    IntBlock2=IntegralBlockNNZ2(i,:)';
    IntBlock1(isnan(IntBlock1))=[];
    IntBlock2(isnan(IntBlock2))=[];
    for iLag=BaseListLag
        switch DimFixed
            case 1
                FunWave=@(X,Y)WaveletBaseFun3D(NodeFixed*ones(size(X,1),size(X,2)),X,Y,...
                    intervalWave,...
                    [BaseFunIndex_x(iWave_x,2);...  j
                    BaseFunIndex_y(iWave_y,2);...
                    BaseFunIndex_z(iWave_z,2)],...
                    [BaseFunIndex_x(iWave_x,3);...  k
                    BaseFunIndex_y(iWave_y,3);...
                    BaseFunIndex_z(iWave_z,3)],...
                    [0;0;0],baseTypeWave,...
                    [BaseFunIndex_x(iWave_x,1);...  SpaceType
                    BaseFunIndex_y(iWave_y,1);...
                    BaseFunIndex_z(iWave_z,1)]);
            case 2
                FunWave=@(X,Y)WaveletBaseFun3D(X,NodeFixed*ones(size(X,1),size(X,2)),Y,...
                    intervalWave,...
                    [BaseFunIndex_x(iWave_x,2);...  j
                    BaseFunIndex_y(iWave_y,2);...
                    BaseFunIndex_z(iWave_z,2)],...
                    [BaseFunIndex_x(iWave_x,3);...  k
                    BaseFunIndex_y(iWave_y,3);...
                    BaseFunIndex_z(iWave_z,3)],...
                    [0;0;0],baseTypeWave,...
                    [BaseFunIndex_x(iWave_x,1);...  SpaceType
                    BaseFunIndex_y(iWave_y,1);...
                    BaseFunIndex_z(iWave_z,1)]);
            case 3
                FunWave=@(X,Y)WaveletBaseFun3D(X,Y,NodeFixed*ones(size(X,1),size(X,2)),...
                    intervalWave,...
                    [BaseFunIndex_x(iWave_x,2);...  j
                    BaseFunIndex_y(iWave_y,2);...
                    BaseFunIndex_z(iWave_z,2)],...
                    [BaseFunIndex_x(iWave_x,3);...  k
                    BaseFunIndex_y(iWave_y,3);...
                    BaseFunIndex_z(iWave_z,3)],...
                    [0;0;0],baseTypeWave,...
                    [BaseFunIndex_x(iWave_x,1);...  SpaceType
                    BaseFunIndex_y(iWave_y,1);...
                    BaseFunIndex_z(iWave_z,1)]);
        end
        FunLag=@(X,Y) LagBaseFun(X,Y,LagBaseIndex(iLag,7:8)',...
            baseTypeLag,Lagele,LagBaseIndex(iLag,5:6)',[0;0]);
        f=@(X,Y)FunWave(X,Y).*FunLag(X,Y);

        value=GaussIntegralBlocks(f,order,2,IntBlock1,IntBlock2);
        value2=integral2(f,min(IntBlock1),max(IntBlock1),...
            min(IntBlock2),max(IntBlock2));
        int_err=...
            [int_err;abs(value-value2)/abs(value2)];
        Triplets=[Triplets;NNZIndexWaveLag(i,1),iLag,value];
    end
end
K=sparse(Triplets(:,1),Triplets(:,2),Triplets(:,3),NWaveDOF,size(LagBaseIndex,1));
end

